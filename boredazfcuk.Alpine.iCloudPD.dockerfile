FROM alpine:latest
MAINTAINER boredazfcuk

ENV CONFIGDIR="/config" \
   REQUIREMENTS="python3 py-pip exiftool coreutils tzdata" \
   BUILDDEPENDENCIES="git gcc python3-dev musl-dev libffi-dev openssl-dev" \
   PYTHONDEPENDENCIES="docopt piexif click certifi pytz tzlocal six chardet idna urllib3 requests future keyrings.alt keyring pyicloud-ipd tqdm schema python-dateutil" \
   REPO="ndbroadbent/icloud_photos_downloader" \
   INTERVAL="86400"

RUN echo "$(date '+%d/%m/%Y - %H:%M:%S') | Install build dependencies" && \
   apk add --no-cache --no-progress --virtual=build-deps ${BUILDDEPENDENCIES} && \
echo "$(date '+%d/%m/%Y - %H:%M:%S') | Install requirements" && \
   apk add --noprogress --no-cache ${REQUIREMENTS} && \
echo "$(date '+%d/%m/%Y - %H:%M:%S') | Install Python dependencies" && \
   pip3 install --upgrade pip  && \
   pip3 install ${PYTHONDEPENDENCIES} && \
echo "$(date '+%d/%m/%Y - %H:%M:%S') | Install ${REPO1}" && \
   TEMP=$(mktemp -d) && \
   git clone -b master "https://github.com/${REPO}.git" "${TEMP}" && \
   cd ${TEMP} && \
   python3 setup.py install && \
echo "$(date '+%d/%m/%Y - %H:%M:%S') | Create startup script" && \
   echo -e "#!/bin/ash\n\nCOOKIE=\x22\x24{APPLEID//_/}\x22\nCOOKIE=\x22\x24{COOKIE// /_}\x22\nCOOKIE=\x22\x24{COOKIE//[^a-zA-Z0-9_]/}\x22\nCOOKIE=\x22\x24(echo -n \x22\x24{COOKIE}\x22 | tr A-Z a-z)\x22\n\nCheckCookie(){\n   if [ \x22\x24(find \x22\x24{CONFIGDIR}\x22 -type f -name \x22\x24{COOKIE}\x22 -mtime +55 | wc -l)\x22 -ne 0 ]; then\n      find \x22\x24{CONFIGDIR}\x22 -type f -name \x22\x24{COOKIE}\x22 -mtime +55 -delete\n   fi\n   while [ ! -f \x22\x24{CONFIGDIR}/\x24{COOKIE}\x22 ]; do\n      echo \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     Cookie does not exist. Container must be run interactively to generate an authentication cookie - retry in 5 minutes\x22\n      sleep 300\n   done\n}\n\nCreateGroup(){\n   if [ -z \x22\x24(getent group \x24{GROUP} | cut -d: -f3)\x22 ]; then\n      addgroup -g \x22\x24{GID}\x22 \x22\x24{GROUP}\x22\n   elif [ ! \x22\x24(getent group \x22\x24{GROUP}\x22 | cut -d: -f3)\x22 = \x22\x24{GID}\x22 ]; then\n      echo \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     Group GID mismatch - exiting\x22\n      exit 1\n   fi\n}\n\nCreateUser(){\n   if [ -z \x22\x24(getent passwd \x22\x24{USER}\x22 | cut -d: -f3)\x22 ]; then\n      adduser -s /bin/ash -D -G \x22\x24{GROUP}\x22 -u \x22\x24{UID}\x22 \x22\x24{USER}\x22 -h \x22/home/\x24USER\x22\n   elif [ ! \x22\x24(getent passwd \x22\x24{USER}\x22 | cut -d: -f3)\x22 = \x22\x24{UID}\x22 ]; then\n      echo \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     User UID mismatch - exiting\x22\n      exit 1\n   fi\n}\n\nif [ -z \x22\x24{USER}\x22 ]; then echo \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     User name invalid - exiting\x22 && exit 1; fi\nif [ -z \x22\x24{APPLEID}\x22 ]; then echo \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     Apple ID invalid - exiting\x22 && exit 1; fi\nif [ -z \x22\x24{APPLEPASSWORD}\x22 ]; then echo \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     Apple Password not specified - exiting\x22 && exit 1; fi\nif [ -z \x22\x24{GROUP}\x22 ]; then echo \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     Group name invalid - exiting\x22 && exit 1; fi\nif [ -z \x22\x24{GID}\x22 ]; then echo \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     Group ID invalid - exiting\x22 && exit 1; fi\nif [ -z \x22\x24{USER}\x22 ]; then echo \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     User name invalid - exiting\x22 && exit 1; fi\nif [ -z \x22\x24{UID}\x22 ]; then echo \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     User ID invalid - exiting\x22 && exit 1; fi\n\nif [ \x22\x24{GENERATECOOKIE}\x22 = \x22True\x22 ]; then\n   CreateGroup\n   CreateUser\n   su \x22\x24{USER}\x22 -c \x22/usr/bin/icloudpd --username \\x22\x24{APPLEID}\\x22 --password=\\x22\x24{APPLEPASSWORD}\\x22 --cookie-directory=\\x22\x24{CONFIGDIR}\\x22\x22\n   echo \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     Cookie generated. Sync should now be successful\x22\n   exit 0\nfi\n\nCheckCookie\n\nif [ ! -f \x22/home/\x24{USER}/iCloud/.mounted\x22 ]; then echo \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     iCloud folder not mounted - exiting\x22 && exit 1; fi\nif [ -z \x22\x24{INTERVAL}\x22 ]; then echo \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     Sync interval not specified - exiting\x22 && exit 1; fi\n\necho \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     Local account: \x24{USER}-\x24{UID}:\x24{GROUP}-\x24{GID}\x22\necho \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     Apple account: \x24{APPLEID}:\x24{APPLEPASSWORD}\x22\necho \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     Cookie directory: \x24{CONFIGDIR}\x22\necho \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     iCloud directory: /home/\x24{USER}/iCloud\x22\necho \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     Command line options: \x24{CLIOPTIONS}\x22\n\nCreateGroup\nCreateUser\n\nif [ \x22\x24(find \x22/home/\x24{USER}/iCloud\x22 ! -user \x22\x24{USER}\x22 |wc -l)\x22 -ne 0 ]; then\n   find \x22/home/\x24{USER}/iCloud\x22 ! -user \x22\x24{USER}\x22 -exec chown \x22\x24{USER}\x22 {} \;\nfi\nif [ \x22\x24(find \x22/home/\x24{USER}/iCloud\x22 ! -group \x22\x24{GROUP}\x22 | wc -l)\x22 -ne 0 ]; then\n   find \x22/home/\x24{USER}/iCloud\x22 ! -group \x22\x24{GROUP}\x22 -exec chgrp \x22\x24{GROUP}\x22 {} \;\nfi\n\nwhile :; do\n   CheckCookie\n   echo \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     Syncronisation for \x24{USER} started\x22\n   if [ -f \x22/home/\x24{USER}/iCloud/.mounted\x22 ]; then\n      echo \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     Sync \x24{USER} iCloud...\x22\n      su -s /bin/ash \x22\x24{USER}\x22 -c \x22/usr/bin/icloudpd --directory \\x22/home/\x24{USER}/iCloud\\x22 --cookie-directory=\\x22\x24{CONFIGDIR}\\x22 --username=\\x22\x24{APPLEID}\\x22 --password=\\x22\x24{APPLEPASSWORD}\\x22 \\x22\x22\x24{CLIOPTIONS}\x22\\x22\x22\n      if [ \x24? -ne 0 ]; then \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     Exit code non-zero - Error: \x24?\x22; fi\n      if [ \x22\x24{SETDATETIMEEXIF}\x22 = \x22True\x22 ]; then\n         echo \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     Set correct file time stamp from exif data...\x22\n         exiftool -d \x22%Y:%m:%d %H:%M:%S\x22 \x27-FileModifyDate<createdate\x27 \x27-FileModifyDate<creationdate\x27 \x27-filemodifydate<datetimeoriginal\x27 -if \x27((\x24datetimeoriginal and (\x24datetimeoriginal ne \x24filemodifydate)) or (\x24creationdate and (\x24creationdate ne \x24filemodifydate)))\x27 -r -q \x22/home/\x24{USER}/iCloud\x22\n      fi\n      echo \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     Set group and permissions of downloaded files...\x22\n      if [ \x22\x24(find \x22/home/\x24{USER}/iCloud\x22 -type d ! -group \x22\x24{GROUP}\x22 | wc -l )\x22 -ne 0 ]; then \n         find \x22/home/\x24{USER}/iCloud\x22 -type d ! -group \x22\x24{GROUP}\x22 -exec chgrp \x22\x24{GROUP}\x22 {} \;\n      fi\n      if [ \x22\x24(find \x22/home/\x24{USER}/iCloud\x22 -type f ! -group \x22\x24{GROUP}\x22 | wc -l )\x22 -ne 0 ]; then\n         find \x22/home/\x24{USER}/iCloud\x22 -type f ! -group \x22\x24{GROUP}\x22 -exec chgrp \x22\x24{GROUP}\x22 {} \;\n      fi\n      if [ \x22\x24(find \x22/home/\x24{USER}/iCloud\x22 -type d ! -perm 770 | wc -l )\x22 -ne 0 ]; then\n         find \x22/home/\x24{USER}/iCloud\x22 -type d ! -perm 770 -exec chmod 770 {} +\n      fi\n      if [ \x22\x24(find \x22/home/\x24{USER}/iCloud\x22 -type f ! -perm 660 | wc -l)\x22 -ne 0 ]; then\n         find \x22/home/\x24{USER}/iCloud\x22 -type f ! -perm 660 -exec chmod 660 {} +\n      fi\n      echo \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     Syncronisation for \x24{USER} complete\x22\n      echo \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     Next syncronisation at \x24(date +%H:%M -d \x22\x24{INTERVAL} seconds\x22)\x22\n      sleep \x22\x24{INTERVAL}\x22\n   else\n      echo \x22\x24(date \x27+%Y-%m-%d %H:%M:%S\x27) INFO     Underlying volume is not mounted. Waiting a minute before retrying\x22\n      sleep 60\n   fi\ndone" >/usr/local/bin/sync-icloud.sh && \
   chmod +x /usr/local/bin/sync-icloud.sh && \
echo "$(date '+%d/%m/%Y - %H:%M:%S') | Clean up and exit" && \
   apk del --purge build-deps

VOLUME ${CONFIGDIR}

CMD /usr/local/bin/sync-icloud.sh
